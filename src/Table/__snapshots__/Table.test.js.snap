// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Table /> handles a sticky header yo 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StickyHeader
    headers={
      Array [
        Array [
          Object {
            "colSpan": 4,
            "text": "Products",
          },
        ],
        Array [
          Object {
            "className": "border",
            "colSpan": 2,
            "text": "Item",
          },
          Object {
            "className": "border",
            "colSpan": 2,
            "text": "Description",
          },
        ],
      ]
    }
    id="head-id"
    top={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <table
        className="GUIMTable undefined"
      >
        <thead>
          <tr
            className="theader "
            id="header-0"
          >
            <th
              className={undefined}
              colSpan={4}
            >
              Products
            </th>
          </tr>
          <tr
            className="theader "
            id="header-1"
          >
            <th
              className="border"
              colSpan={2}
            >
              Item
            </th>
            <th
              className="border"
              colSpan={2}
            >
              Description
            </th>
          </tr>
        </thead>
      </table>,
      "id": "ticky",
      "style": Object {},
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <thead>
          <tr
            className="theader "
            id="header-0"
          >
            <th
              className={undefined}
              colSpan={4}
            >
              Products
            </th>
          </tr>
          <tr
            className="theader "
            id="header-1"
          >
            <th
              className="border"
              colSpan={2}
            >
              Item
            </th>
            <th
              className="border"
              colSpan={2}
            >
              Description
            </th>
          </tr>
        </thead>,
        "className": "GUIMTable undefined",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>,
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "header-0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th
                  className={undefined}
                  colSpan={4}
                >
                  Products
                </th>,
              ],
              "className": "theader ",
              "id": "header-0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "row-header-0-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Products",
                  "className": undefined,
                  "colSpan": 4,
                },
                "ref": null,
                "rendered": "Products",
                "type": "th",
              },
            ],
            "type": "tr",
          },
          Object {
            "instance": null,
            "key": "header-1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th
                  className="border"
                  colSpan={2}
                >
                  Item
                </th>,
                <th
                  className="border"
                  colSpan={2}
                >
                  Description
                </th>,
              ],
              "className": "theader ",
              "id": "header-1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "row-header-1-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Item",
                  "className": "border",
                  "colSpan": 2,
                },
                "ref": null,
                "rendered": "Item",
                "type": "th",
              },
              Object {
                "instance": null,
                "key": "row-header-1-1",
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "className": "border",
                  "colSpan": 2,
                },
                "ref": null,
                "rendered": "Description",
                "type": "th",
              },
            ],
            "type": "tr",
          },
        ],
        "type": "thead",
      },
      "type": "table",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <table
          className="GUIMTable undefined"
        >
          <thead>
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>
          </thead>
        </table>,
        "id": "ticky",
        "style": Object {},
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <thead>
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>
          </thead>,
          "className": "GUIMTable undefined",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr
                className="theader "
                id="header-0"
              >
                <th
                  className={undefined}
                  colSpan={4}
                >
                  Products
                </th>
              </tr>,
              <tr
                className="theader "
                id="header-1"
              >
                <th
                  className="border"
                  colSpan={2}
                >
                  Item
                </th>
                <th
                  className="border"
                  colSpan={2}
                >
                  Description
                </th>
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "header-0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    className={undefined}
                    colSpan={4}
                  >
                    Products
                  </th>,
                ],
                "className": "theader ",
                "id": "header-0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "row-header-0-0",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Products",
                    "className": undefined,
                    "colSpan": 4,
                  },
                  "ref": null,
                  "rendered": "Products",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": "header-1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    className="border"
                    colSpan={2}
                  >
                    Item
                  </th>,
                  <th
                    className="border"
                    colSpan={2}
                  >
                    Description
                  </th>,
                ],
                "className": "theader ",
                "id": "header-1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "row-header-1-0",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Item",
                    "className": "border",
                    "colSpan": 2,
                  },
                  "ref": null,
                  "rendered": "Item",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": "row-header-1-1",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "className": "border",
                    "colSpan": 2,
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "thead",
        },
        "type": "table",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<Table /> handles a sticky header yo 2`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <StickyHeader
    headers={
      Array [
        Array [
          Object {
            "colSpan": 4,
            "text": "Products",
          },
        ],
        Array [
          Object {
            "className": "border",
            "colSpan": 2,
            "text": "Item",
          },
          Object {
            "className": "border",
            "colSpan": 2,
            "text": "Description",
          },
        ],
      ]
    }
    id="head-id"
    top={0}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <table
        className="GUIMTable undefined"
      >
        <thead>
          <tr
            className="theader "
            id="header-0"
          >
            <th
              className={undefined}
              colSpan={4}
            >
              Products
            </th>
          </tr>
          <tr
            className="theader "
            id="header-1"
          >
            <th
              className="border"
              colSpan={2}
            >
              Item
            </th>
            <th
              className="border"
              colSpan={2}
            >
              Description
            </th>
          </tr>
        </thead>
      </table>,
      "id": "ticky",
      "style": Object {
        "display": "block",
        "position": "fixed",
        "top": 0,
        "width": 0,
        "zIndex": 1,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <thead>
          <tr
            className="theader "
            id="header-0"
          >
            <th
              className={undefined}
              colSpan={4}
            >
              Products
            </th>
          </tr>
          <tr
            className="theader "
            id="header-1"
          >
            <th
              className="border"
              colSpan={2}
            >
              Item
            </th>
            <th
              className="border"
              colSpan={2}
            >
              Description
            </th>
          </tr>
        </thead>,
        "className": "GUIMTable undefined",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>,
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "header-0",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th
                  className={undefined}
                  colSpan={4}
                >
                  Products
                </th>,
              ],
              "className": "theader ",
              "id": "header-0",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "row-header-0-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Products",
                  "className": undefined,
                  "colSpan": 4,
                },
                "ref": null,
                "rendered": "Products",
                "type": "th",
              },
            ],
            "type": "tr",
          },
          Object {
            "instance": null,
            "key": "header-1",
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <th
                  className="border"
                  colSpan={2}
                >
                  Item
                </th>,
                <th
                  className="border"
                  colSpan={2}
                >
                  Description
                </th>,
              ],
              "className": "theader ",
              "id": "header-1",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "row-header-1-0",
                "nodeType": "host",
                "props": Object {
                  "children": "Item",
                  "className": "border",
                  "colSpan": 2,
                },
                "ref": null,
                "rendered": "Item",
                "type": "th",
              },
              Object {
                "instance": null,
                "key": "row-header-1-1",
                "nodeType": "host",
                "props": Object {
                  "children": "Description",
                  "className": "border",
                  "colSpan": 2,
                },
                "ref": null,
                "rendered": "Description",
                "type": "th",
              },
            ],
            "type": "tr",
          },
        ],
        "type": "thead",
      },
      "type": "table",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <table
          className="GUIMTable undefined"
        >
          <thead>
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>
          </thead>
        </table>,
        "id": "ticky",
        "style": Object {
          "display": "block",
          "position": "fixed",
          "top": 0,
          "width": 0,
          "zIndex": 1,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <thead>
            <tr
              className="theader "
              id="header-0"
            >
              <th
                className={undefined}
                colSpan={4}
              >
                Products
              </th>
            </tr>
            <tr
              className="theader "
              id="header-1"
            >
              <th
                className="border"
                colSpan={2}
              >
                Item
              </th>
              <th
                className="border"
                colSpan={2}
              >
                Description
              </th>
            </tr>
          </thead>,
          "className": "GUIMTable undefined",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <tr
                className="theader "
                id="header-0"
              >
                <th
                  className={undefined}
                  colSpan={4}
                >
                  Products
                </th>
              </tr>,
              <tr
                className="theader "
                id="header-1"
              >
                <th
                  className="border"
                  colSpan={2}
                >
                  Item
                </th>
                <th
                  className="border"
                  colSpan={2}
                >
                  Description
                </th>
              </tr>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "header-0",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    className={undefined}
                    colSpan={4}
                  >
                    Products
                  </th>,
                ],
                "className": "theader ",
                "id": "header-0",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "row-header-0-0",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Products",
                    "className": undefined,
                    "colSpan": 4,
                  },
                  "ref": null,
                  "rendered": "Products",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            Object {
              "instance": null,
              "key": "header-1",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    className="border"
                    colSpan={2}
                  >
                    Item
                  </th>,
                  <th
                    className="border"
                    colSpan={2}
                  >
                    Description
                  </th>,
                ],
                "className": "theader ",
                "id": "header-1",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "row-header-1-0",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Item",
                    "className": "border",
                    "colSpan": 2,
                  },
                  "ref": null,
                  "rendered": "Item",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": "row-header-1-1",
                  "nodeType": "host",
                  "props": Object {
                    "children": "Description",
                    "className": "border",
                    "colSpan": 2,
                  },
                  "ref": null,
                  "rendered": "Description",
                  "type": "th",
                },
              ],
              "type": "tr",
            },
          ],
          "type": "thead",
        },
        "type": "table",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`<Table /> handles striped and non striped rows 1`] = `
Array [
  "",
  <table
    className="GUIMTable "
  >
    <thead>
      <tr
        className="theader "
        id="header-0"
      >
        <th
          className={undefined}
          colSpan={4}
        >
          Products
        </th>
      </tr>
      <tr
        className="theader "
        id="header-1"
      >
        <th
          className="border"
          colSpan={2}
        >
          Item
        </th>
        <th
          className="border"
          colSpan={2}
        >
          Description
        </th>
      </tr>
    </thead>
    <tbody
      className="striped"
    >
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          1
        </td>
        <td>
          Wheat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          2
        </td>
        <td>
          Rice
        </td>
        <td>
          Regular
        </td>
        <td>
          300 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          3
        </td>
        <td>
          Sugar
        </td>
        <td>
          Bad
        </td>
        <td>
          100 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          4
        </td>
        <td>
          Meat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Kgs
        </td>
      </tr>
    </tbody>
  </table>,
]
`;

exports[`<Table /> handles striped and non striped rows 2`] = `
Array [
  "",
  <table
    className="GUIMTable "
  >
    <thead>
      <tr
        className="theader "
        id="header-0"
      >
        <th
          className={undefined}
          colSpan={4}
        >
          Products
        </th>
      </tr>
      <tr
        className="theader "
        id="header-1"
      >
        <th
          className="border"
          colSpan={2}
        >
          Item
        </th>
        <th
          className="border"
          colSpan={2}
        >
          Description
        </th>
      </tr>
    </thead>
    <tbody
      className=""
    >
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          1
        </td>
        <td>
          Wheat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          2
        </td>
        <td>
          Rice
        </td>
        <td>
          Regular
        </td>
        <td>
          300 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          3
        </td>
        <td>
          Sugar
        </td>
        <td>
          Bad
        </td>
        <td>
          100 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          4
        </td>
        <td>
          Meat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Kgs
        </td>
      </tr>
    </tbody>
  </table>,
]
`;

exports[`<Table /> highlights row when hover 1`] = `
Array [
  "",
  <table
    className="GUIMTable "
  >
    <thead>
      <tr
        className="theader "
        id="header-0"
      >
        <th
          className={undefined}
          colSpan={4}
        >
          Products
        </th>
      </tr>
      <tr
        className="theader "
        id="header-1"
      >
        <th
          className="border"
          colSpan={2}
        >
          Item
        </th>
        <th
          className="border"
          colSpan={2}
        >
          Description
        </th>
      </tr>
    </thead>
    <tbody
      className=""
    >
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          1
        </td>
        <td>
          Wheat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          2
        </td>
        <td>
          Rice
        </td>
        <td>
          Regular
        </td>
        <td>
          300 Bags
        </td>
      </tr>
      <tr
        className="trow highlighted "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          3
        </td>
        <td>
          Sugar
        </td>
        <td>
          Bad
        </td>
        <td>
          100 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          4
        </td>
        <td>
          Meat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Kgs
        </td>
      </tr>
    </tbody>
  </table>,
]
`;

exports[`<Table /> highlights row when hover 2`] = `
Array [
  "",
  <table
    className="GUIMTable "
  >
    <thead>
      <tr
        className="theader "
        id="header-0"
      >
        <th
          className={undefined}
          colSpan={4}
        >
          Products
        </th>
      </tr>
      <tr
        className="theader "
        id="header-1"
      >
        <th
          className="border"
          colSpan={2}
        >
          Item
        </th>
        <th
          className="border"
          colSpan={2}
        >
          Description
        </th>
      </tr>
    </thead>
    <tbody
      className=""
    >
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          1
        </td>
        <td>
          Wheat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          2
        </td>
        <td>
          Rice
        </td>
        <td>
          Regular
        </td>
        <td>
          300 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          3
        </td>
        <td>
          Sugar
        </td>
        <td>
          Bad
        </td>
        <td>
          100 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          4
        </td>
        <td>
          Meat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Kgs
        </td>
      </tr>
    </tbody>
  </table>,
]
`;

exports[`<Table /> match dom snapshot 1`] = `
Array [
  "",
  <table
    className="GUIMTable "
  >
    <thead>
      <tr
        className="theader "
        id="header-0"
      >
        <th
          className={undefined}
          colSpan={4}
        >
          Products
        </th>
      </tr>
      <tr
        className="theader "
        id="header-1"
      >
        <th
          className="border"
          colSpan={2}
        >
          Item
        </th>
        <th
          className="border"
          colSpan={2}
        >
          Description
        </th>
      </tr>
    </thead>
    <tbody
      className=""
    >
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          1
        </td>
        <td>
          Wheat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          2
        </td>
        <td>
          Rice
        </td>
        <td>
          Regular
        </td>
        <td>
          300 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          3
        </td>
        <td>
          Sugar
        </td>
        <td>
          Bad
        </td>
        <td>
          100 Bags
        </td>
      </tr>
      <tr
        className="trow  "
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
      >
        <td>
          4
        </td>
        <td>
          Meat
        </td>
        <td>
          Good
        </td>
        <td>
          200 Kgs
        </td>
      </tr>
    </tbody>
  </table>,
]
`;
